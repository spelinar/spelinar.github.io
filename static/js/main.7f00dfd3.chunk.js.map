{"version":3,"sources":["fetch.js","Films.js","Film.js","Characters.js","Character.js","Home.js","Layout.js","App.js","index.js"],"names":["a","fetch","res","json","Films","props","useQuery","data","status","error","className","Typography","variant","results","map","film","filmUrlParts","url","split","filter","Boolean","filmId","length","Link","component","RouterLink","to","episode_id","title","Date","parse","release_date","getFullYear","Character","id","name","withRouter","match","params","console","info","opening_crawl","characters","character","characterUrlParts","characterId","Characters","class","person","personUrlParts","personId","style","margin","Film","Homeworld","homeworldUrlParts","homeworld","homeworldId","TableContainer","Paper","maxWidth","Table","size","aria-label","TableHead","TableRow","TableCell","TableBody","birth_year","eye_color","hair_color","height","mass","films","Home","useStyles","makeStyles","theme","main","Layout","classes","menu","Button","color","exact","path","padding","display","justifyContent","backgroundColor","spacing","queryClient","QueryClient","App","QueryClientProvider","client","ThemeProvider","initialIsOpen","createMuiTheme","typography","h1","fontFamily","h2","h3","h4","h5","h6","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.7f00dfd3.chunk.js","sourcesContent":["export default async function(...args) {\r\n    const res = await fetch(...args);\r\n    return await res.json();\r\n}\r\n","import React from \"react\";\r\nimport { Typography, Link } from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport fetch from \"./fetch\";\r\nimport './style.css'\r\n\r\nexport default function Films(props) {\r\n    const { data, status, error } = useQuery(\"films\", () =>\r\n        fetch(\"https://swapi.dev/api/films/\")\r\n    );\r\n\r\n    if (status === \"loading\") {\r\n        return <p>Loading...</p>;\r\n    }\r\n    if (status === \"error\") {\r\n        return <p>Error :(</p>;\r\n    }\r\n\r\n    return (\r\n        <div className='fil'>\r\n            <Typography variant=\"h2\">Films</Typography>\r\n            {data.results.map((film) => {\r\n                const filmUrlParts = film.url.split(\"/\").filter(Boolean);\r\n                const filmId = filmUrlParts[filmUrlParts.length - 1];\r\n                return (\r\n                    <article key={filmId}>\r\n                        <Link component={RouterLink} to={`/films/${filmId}`}>\r\n                            <Typography variant=\"h6\">\r\n                                {film.episode_id}. {film.title}{\" \"}\r\n                                <em>\r\n                                    ({new Date(Date.parse(film.release_date)).getFullYear()})\r\n                                </em>\r\n                            </Typography>\r\n                        </Link>\r\n                    </article>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Typography, Link } from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nimport { useQuery } from \"react-query\";\r\nimport fetch from \"./fetch\";\r\nimport './style.css'\r\n\r\nfunction Film(props) {\r\n    const filmId = props.match.params.filmId;\r\n    const { data, status, error } = useQuery(`film-${filmId}`, () =>\r\n        fetch(`https://swapi.dev/api/films/${filmId}/`)\r\n    );\r\n\r\n    if (status === \"loading\") return <p>Loading...</p>;\r\n    if (data == null) {\r\n        console.info(\"this shouldn't happen but it does 2\");\r\n        return <p>Loading...</p>;\r\n    }\r\n    if (status === \"error\") return <p>Error :(</p>;\r\n    return (\r\n        <div>\r\n            <div className='cos'>\r\n            <Typography variant=\"h2\">{data.title}</Typography>\r\n\r\n            <Typography variant=\"body1\">{data.opening_crawl}</Typography>\r\n            <br /></div>\r\n            <Typography variant=\"h4\">Characters</Typography>\r\n            {data.characters.map((character) => {\r\n                const characterUrlParts = character.split(\"/\").filter(Boolean);\r\n                const characterId = characterUrlParts[characterUrlParts.length - 1];\r\n                return <Character id={characterId} key={characterId} />;\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Character(props) {\r\n    const { id } = props;\r\n    const { data, status, error } = useQuery(`character-${id}`, () =>\r\n        fetch(`https://swapi.dev/api/people/${props.id}/`)\r\n    );\r\n\r\n    if (status !== \"success\") {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <article key={id}>\r\n            <Link component={RouterLink} to={`/characters/${id}`}>\r\n                <Typography variant=\"h6\">{data.name}</Typography>\r\n            </Link>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default withRouter(Film);\r\n","import React from \"react\";\r\nimport { Typography, Link } from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport fetch from \"./fetch\";\r\n\r\nexport default function Characters(props) {\r\n    const { status, error, data } = useQuery(\"characters\", () =>\r\n        fetch(`https://swapi.dev/api/people/`)\r\n    );\r\n\r\n    if (status === \"loading\") return <p>Loading...</p>;\r\n    if (status === \"error\") return <p>Error :(</p>;\r\n\r\n    return (\r\n        <div class='charakter'>\r\n            <Typography variant=\"h2\">Characters</Typography>\r\n            {data.results.map((person) => {\r\n                const personUrlParts = person.url.split(\"/\").filter(Boolean);\r\n                const personId = personUrlParts[personUrlParts.length - 1];\r\n                return (\r\n                    <article key={personId} style={{ margin: \"16px 0 0\" }}>\r\n                        <Link component={RouterLink} to={`/characters/${personId}`}>\r\n                            <Typography variant=\"h6\">{person.name}</Typography>\r\n                        </Link>\r\n                    </article>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    Typography,\r\n    Link,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n} from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nimport { useQuery } from \"react-query\";\r\nimport fetch from \"./fetch\";\r\nimport \"./style.css\"\r\n\r\nfunction Character(props) {\r\n    const characterId = props.match.params.characterId;\r\n    const { status, error, data } = useQuery(`character-${characterId}`, () =>\r\n        fetch(`https://swapi.dev/api/people/${characterId}/`)\r\n    );\r\n\r\n    if (status === \"loading\") return <p>Loading...</p>;\r\n    if (status === \"error\") return <p>Error :(</p>;\r\n\r\n    console.info({ data, status, error });\r\n    const homeworldUrlParts = data.homeworld.split(\"/\").filter(Boolean);\r\n    const homeworldId = homeworldUrlParts[homeworldUrlParts.length - 1];\r\n\r\n    if (status !== \"success\") {\r\n        return null;\r\n    }\r\n    return (\r\n        <div >\r\n        <div>\r\n            <Typography variant=\"h2\">{data.name}</Typography>\r\n            <TableContainer  component={Paper} style={{ maxWidth: \"400px\", margin: \"auto\" }} >\r\n                <Table size=\"small\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Feature</TableCell>\r\n                            <TableCell>Value</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell>Born</TableCell>\r\n                            <TableCell>{data.birth_year}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>Eyes</TableCell>\r\n                            <TableCell>{data.eye_color}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>Hair</TableCell>\r\n                            <TableCell>{data.hair_color}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>Height</TableCell>\r\n                            <TableCell>{data.height}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>Mass</TableCell>\r\n                            <TableCell>{data.mass}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>Homeworld</TableCell>\r\n                            <TableCell>\r\n                                <Homeworld id={homeworldId} />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <br />\r\n            <Typography variant=\"h4\">Films</Typography>\r\n            {data.films.map((film) => {\r\n                const filmUrlParts = film.split(\"/\").filter(Boolean);\r\n                const filmId = filmUrlParts[filmUrlParts.length - 1];\r\n                return <Film id={filmId} key={`Film-${filmId}`} />;\r\n            })}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Film(props) {\r\n    const { id } = props;\r\n    const { data, status, error } = useQuery(`film-${id}`, () =>\r\n        fetch(`https://swapi.dev/api/films/${id}/`)\r\n    );\r\n\r\n    if (status !== \"success\") {\r\n        return null;\r\n    }\r\n    return (\r\n        <article key={id}>\r\n            <Link component={RouterLink} to={`/films/${id}`}>\r\n                <Typography variant=\"h6\">\r\n                    {data.episode_id}. {data.title}\r\n                </Typography>\r\n            </Link>\r\n        </article>\r\n    );\r\n}\r\n\r\nfunction Homeworld(props) {\r\n    const { id } = props;\r\n    const { data, status } = useQuery(`homeworld-${id}`, () =>\r\n        fetch(`https://swapi.dev/api/planets/${id}/`)\r\n    );\r\n\r\n    if (status !== \"success\") {\r\n        return null;\r\n    }\r\n\r\n    return data.name;\r\n}\r\n\r\nexport default withRouter(Character);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport './style.css'\r\nimport ReactAudioPlayer from 'react-audio-player';\r\n\r\n<ReactAudioPlayer\r\n    src=\"imp.ogg\"\r\n    autoPlay\r\n    controls\r\n/>\r\n\r\nexport default function Home(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <body>\r\n        <div class=\"container\">\r\n            <div class=\"credits\">\r\n                <div class=\"headings\">\r\n                    <h1>EPISODE IV</h1>\r\n                    <h2>A New Hope</h2>\r\n                </div>\r\n                <p>Amid a galactic civil war, Rebel Alliance spies have stolen plans to the Galactic Empire's Death Star, a massive space station capable of destroying an entire planet. Imperial Senator Princess Leia of Alderaan, secretly one of the Rebellion's leaders, has obtained its schematics, but her starship is intercepted by an Imperial Star Destroyer under the command of the ruthless Darth Vader. Before she is captured, Leia hides the plans in the memory of astromech droid R2-D2, who flees in an escape pod to the desert planet Tatooine accompanied by protocol droid C-3PO.</p>\r\n                 </div>\r\n        </div>\r\n        </body>\r\n    );\r\n\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    main: {\r\n        margin: \"0 px\",\r\n        \"& p\": {\r\n            margin: \"12px 0 24px\"\r\n        }\r\n    }\r\n}));\r\n","import React from \"react\";\r\nimport Films from \"./Films\";\r\nimport Film from \"./Film\";\r\nimport Characters from \"./Characters\";\r\nimport Character from \"./Character\";\r\nimport Home from \"./Home\";\r\nimport { Link, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Switch, Route, Link as RouterLink } from \"react-router-dom\";\r\nimport * as url from \"url\";\r\nimport './style.css'\r\n\r\nexport default function Layout(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <nav className={classes.menu}>\r\n                <Link component={RouterLink} to=\"/\">\r\n                    <Button color=\"primary\">Home</Button>\r\n                </Link>\r\n                <Link component={RouterLink} to=\"/characters\">\r\n                    <Button color=\"primary\">Characters</Button>\r\n                </Link>\r\n                <Link component={RouterLink} to=\"/films\">\r\n                    <Button color=\"primary\">Films</Button>\r\n                </Link>\r\n            </nav>\r\n            <main className={classes.main}>\r\n                <Switch>\r\n                    <Route exact path=\"/films\">\r\n                        <Films />\r\n                    </Route>\r\n                    <Route exact path=\"/films/:filmId\">\r\n                        <Film />\r\n                    </Route>\r\n                    <Route exact path=\"/characters\">\r\n                        <Characters />\r\n                    </Route>\r\n                    <Route exact path=\"/characters/:characterId\">\r\n                        <Character />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                </Switch>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    main: {\r\n        margin: \"0 auto\",\r\n        padding: \"0px\"\r\n    },\r\n    menu: {\r\n        margin: \"0px, auto\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n       // backgroundImage: url(\"http://www.script-tutorials.com/demos/360/images/stars.png\"),\r\n        backgroundColor: \"#272b30\",\r\n        \"& button\": {\r\n            margin: theme.spacing(1)\r\n        }\r\n\r\n    }\r\n}));\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\n\r\nimport \"./styles.css\";\r\nimport Layout from \"./Layout\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nexport default function App() {\r\n  return (\r\n      <QueryClientProvider client={queryClient}>\r\n        <Router>\r\n          <ThemeProvider theme={theme}>\r\n            <Layout />\r\n            <ReactQueryDevtools initialIsOpen />\r\n          </ThemeProvider>\r\n        </Router>\r\n      </QueryClientProvider>\r\n  );\r\n}\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    h1: {\r\n      fontFamily: \"Roboto Mono, monospace\",\r\n    },\r\n    h2: {\r\n      fontFamily: \"Roboto Mono, monospace\",\r\n    },\r\n    h3: {\r\n      fontFamily: \"Roboto Mono, monospace\",\r\n    },\r\n    h4: {\r\n      fontFamily: \"Roboto Mono, monospace\",\r\n    },\r\n    h5: {\r\n      fontFamily: \"Roboto Mono, monospace\",\r\n    },\r\n    h6: {\r\n      fontFamily: \"Roboto Mono, monospace\",\r\n    },\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}